COSAS A MENCINAR
- indisponibilidad food2fork

- problema aleatorio con slack

- videos del niño tanmay bakshi

Cortana Intelligenge Suite into fridges
https://blogs.technet.microsoft.com/machinelearning/2016/09/02/microsoft-and-liebherr-collaborating-on-new-generation-of-smart-refrigerators/
https://blogs.technet.microsoft.com/machinelearning/2016/10/25/how-to-train-a-deep-learned-object-detection-model-in-cntk/
https://www.theverge.com/2016/12/13/13935136/microsoft-cortana-windows-10-iot-devices
https://techcrunch.com/2016/09/02/microsoft-is-putting-cortana-machine-learning-in-a-fridge/
https://www.makeuseof.com/tag/microsoft-cortana-fridge-out-of-milk/

Fridge Chatbot - Promo Video


MEJORAS
- utiliza la entidad del sistema @sys-person para extraer el nombre del usuario de la entrada 

- controlar si suben una foto de algo que no es comida

- detectar como excluir ciertos ingredientes, captar las negaciones

- comidas segun partes del día: desayuno, comida, cena...
 
- cuando el usuario le pregunte si tiene ingredientes suficientes que responda que es una primera versión y que no puede contestar a eso, que está estudiando para ello

-  ingredientes como lista

- codificación de las recetas, por ejemplo 1/2 lo devuelve como &frac12;

- Entrenar con los platos que devuelva si no los conoce y con las intolerancias que comparta el usuario



INTERFAZ CONVERSACION
mover, duplicar, deshacer cambios en la conversacion
semi optional slots
versionado, backups


¿por qué no he usado slots?
- me limita para los slots opcionales, porque tengo que usar nodos diferentes para comprobar si están rellenos, 
comprobando cada una de las variables ya que de un nodo con slots no sale hasta que no tiene rellenos todos.

en un nodo con slots no puedo inicializar variables de entorno, porque no hay editor JSON salvo para la respuesta cuando los encuentra todos

no puedo usar nodos de slot para cada variable, porque la respuesta del usuario puede contener información de otras entidades
el uso de slot nos ayuda a asegurarnos de que la información necesaria es proporcionada, y si no es proporcionada se solicita hasta que sea proporcionada, intercambiando respuestas adecuadas en cada caso.
Pero en el caso de información opcional esto no es tan util, porque 

copiar y pegar, duplicar nodos y moverlos, no le sienta bien, en varias ocasiones se pierde la información o empieza a comportarse de forma aleatoria. No detecta errores en las variables entorno
puedo quitar una letra y no avisa, esto dificulta la depuracion, porque hay que ir mirando por cada editor JSON de cada nodo para ver si la variable es correcta. No se puede deshacer.

Cuidado con el orden de las condiciones en el slot, y tambien he comprobado que es necesario añadir una frase en "If $variable is not present then ask:". Aun están en beta y no están muy depurados, 
si dejas una respuesta vacía para que no responda nada, porque lo unico que quieres es incrementar el contador entonces no funciona correctamente. Desaparecen botones de volver o guardar.

	Decidir la siguiente respuesta del sistema: ¿qué información dar? Historia del diálogo ¿de dónde obtenerla? Manejar diversas fuentes de información.
	Gestionar la interacción: iniciativa del diálogo.
	Recuperación de errores: ¿se ha entendido bien la petición del usuario? ¿Cómo corregirla? Estrategias de confirmación.
	Mantener historia del diálogo: ¿qué información es necesario almacenar? ¿Cómo?
	Aspectos avanzados: aprender de la experiencia. Estrategias adaptativas. Estrategias predictivas.

  
Recomendaciones técnicas
Cada paso del diálogo tiene miles de posibles respuestas por parte del usuario, por muy buen trabajo de diseño del diálogo que hayamos hecho es imposible conocer todas las respuestas o caminos que puede tomar la conversación. Por ello es vital registrar qué responde el usuario en qué pasos, a fin de re-programar (entrenar) nuestro chatbot para que pueda procesar esas respuestas y tomar decisiones (añadirla a la lista de posibles respuestas, crear un nuevo paso del diálogo, volver a un estado anterior, etc.).

Enviar iconos o gifs para hacer que las conversaciones parezcan más fluidas y menos programada. Elemento visual que refuerza la comunicación.
Economía del lenguaje


Sugerir posibles respuestas al usuario para que de forma casi inconsciente nos facilite el trabajo es súper importante.


desbalanceo de los ejemplos, por ejemplo con negative_reactions

